# -*- coding: utf-8 -*-
"""tcl

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l7ZzJ7j3S7ZmaadUvd0VjJs9nfHDo81k
"""

# Librerías
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Genera una serie con distribución beta
serie = np.random.beta(1, 10, 10000)

# Genera muestras aleatorias de 5, 10, 50, 100, 200, 500, 1000, 5000 datos
# Genera una serie con distribución beta
serie = np.random.beta(1, 10, 10000)

# Genera muestras aleatorias de 5, 10, 50, 100, 200, 500, 1000, 5000 datos
size = [5, 10, 50, 100, 200, 500, 1000, 5000]

# Lista de muestas
muestras = [np.random.choice(serie, s) for s in size]

# Genera n muestras de tamaño n y las guarda en una lista
muestras = []
for i in range(0, 10):
    muestras.append(np.random.choice(serie, 5).mean())
muestras

# Genera media de muestras por tamaño y cantidad
def media_muestras(tamano, cantidad):
  muestras = []
  for i in range(0, cantidad):
    muestras.append(np.random.choice(serie, tamano).mean())
  return muestras

# Genera las muestras del ejemplo
mm1 = media_muestras(5, 50)
mm2 = media_muestras(10, 100)
mm3 = media_muestras(50, 500)
mm4= media_muestras(100, 1000)
mm5 = media_muestras(200, 2000)
mm6 = media_muestras(500, 5000)
mm7 = media_muestras(1000, 10000)
mm8 = media_muestras(5000, 50000)

# Histograma serie original Beta que no es normal
fig_dim = (10, 5)
fig, ax = plt.subplots(nrows = 1, ncols = 1, figsize = fig_dim)
sns.histplot(data = serie, edgecolor = 'white', kde = True, bins = 35, color = 'orange', ax = ax)
plt.show();

# Histogramas (largo)
fig_dim = (14, 6)
fig, ax = plt.subplots(nrows = 2, ncols = 4, figsize = fig_dim)
sns.histplot(data = mm1, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[0,0])
sns.histplot(data = mm2, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[0,1])
sns.histplot(data = mm3, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[0,2])
sns.histplot(data = mm4, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[0,3])
sns.histplot(data = mm5, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[1,0])
sns.histplot(data = mm6, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[1,1])
sns.histplot(data = mm7, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[1,2])
sns.histplot(data = mm8, edgecolor = 'white', kde = True, bins = 35, color = 'blue', ax = ax[1,3])
plt.show();

# Histogramas (simplificado grilla)
serie = [mm1, mm2, mm3, mm4, mm5, mm6, mm7, mm8]

def graficar(serie, filas, columnas):
  fig_dim = (14, 6)
  fig, ax = plt.subplots(nrows = filas, ncols = columnas, figsize = fig_dim)

  # Calcula los row/col indices
  for index, data in enumerate(serie):
    row = index // columnas  # row index
    col = index % columnas   # colum index
    sns.histplot(data=data, edgecolor='white', kde=True, bins=35, color='blue', ax=ax[row, col])
    # Accede a las gráficas

  plt.show();
  C:\Users\camed\OneDrive\Documentos\Git\Statistics

# Aumenta el número de muestras y su tamaño para verificar tcl
graficar(serie, 2, 4)